---
// @ts-nocheck
// Rendered when browsing next pages of posts

import Base from "@/layouts/Base.astro";
import type { CollectionEntry } from "astro:content";

import Post from "@/components/Post";
import Pagination from "@/components/Pagination";
import config from "@/config/config.json";
import { getSinglePage } from "@/utils/contentParser.astro";
import { sortByDate } from "@/utils/strings";

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getSinglePage("posts");
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const posts = sortByDate(
  await getSinglePage<CollectionEntry<"posts">>("posts")
);

const paginationSize = config.settings.pagination;

const totalPages = Math.ceil(posts.length / paginationSize);
const { slug } = Astro.params;
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;

const postsSliceStart = (currentPage - 1) * paginationSize;
const postsSliceEnd = postsSliceStart + paginationSize;
const currentPosts = posts.slice(postsSliceStart, postsSliceEnd);
---

<Base>
  <section class="container mx-auto py-10 px-5 md:px-12 ">
    <div
      class="grid grid-flow-row gap-8 text-neutral-600 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3"
    >
      {
        currentPosts.map((post) => {
          return (
            <div class="justify-self-center my-8 rounded-lg shadow-lg shadow-gray-200 max-w-sm dark:shadow-gray-900 bg-white dark:bg-gray-800 duration-300 hover:scale-105">
              <Post
                post={{
                  id: post.id,
                  slug: post.slug,
                  body: post.body,
                  showFullPost: false,
                  ...post.data,
                }}
                client:idle
              />
            </div>
          );
        })
      }
    </div>
    {
      totalPages > 1 && (
        <div class="flex flex-row justify-center">
          <Pagination paginationSize={totalPages} activePage={currentPage} />
        </div>
      )
    }
  </section>
</Base>
