---
// @ts-nocheck

import Base from "@/layouts/Base.astro";
import type { CollectionEntry } from "astro:content";

import config from "@/config/config.json";
import { sortByDate } from "@/utils/strings";
import Post from "@/components/Post";
import Pagination from "@/components/Pagination";
import { getSinglePage } from "@/utils/contentParser.astro";

const posts = sortByDate(
  await getSinglePage<CollectionEntry<"posts">>("posts")
);

const paginationSize = config.settings.pagination;

const totalPages = Math.ceil(posts.length / paginationSize);

const page = Number(Astro.url.searchParams.get("page")) || 1;
const postsSliceStart = (page - 1) * paginationSize;
const postsSliceEnd = postsSliceStart + paginationSize;
const currentPosts = posts.slice(postsSliceStart, postsSliceEnd);
---

<Base>
  <section class="container mx-auto py-10 px-5 md:px-12  ">
    <div
      class="grid grid-flow-row gap-8 text-neutral-600 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3"
    >
      {
        currentPosts.map((post) => (
          <div class="justify-self-center my-8 w-full rounded-lg shadow-lg shadow-gray-200 max-w-sm dark:shadow-gray-900 bg-white dark:bg-gray-800 duration-300 hover:scale-105">
            <Post
              post={{
                id: post.id,
                slug: post.slug,
                body: post.body,
                showFullPost: false,
                embededCodeLanguage: post.embededCodeLanguage,
                ...post.data,
              }}
              client:idle
            />
          </div>
        ))
      }
    </div>
    {
      totalPages > 1 && (
        <div class="flex flex-row justify-center">
          <Pagination paginationSize={totalPages} activePage={1} />
        </div>
      )
    }
  </section>
</Base>
